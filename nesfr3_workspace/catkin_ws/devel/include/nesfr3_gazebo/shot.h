// Generated by gencpp from file nesfr3_gazebo/shot.msg
// DO NOT EDIT!


#ifndef NESFR3_GAZEBO_MESSAGE_SHOT_H
#define NESFR3_GAZEBO_MESSAGE_SHOT_H

#include <ros/service_traits.h>


#include <nesfr3_gazebo/shotRequest.h>
#include <nesfr3_gazebo/shotResponse.h>


namespace nesfr3_gazebo
{

struct shot
{

typedef shotRequest Request;
typedef shotResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct shot
} // namespace nesfr3_gazebo


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::nesfr3_gazebo::shot > {
  static const char* value()
  {
    return "635e9215bafe4f59d545a92d1d2ef52b";
  }

  static const char* value(const ::nesfr3_gazebo::shot&) { return value(); }
};

template<>
struct DataType< ::nesfr3_gazebo::shot > {
  static const char* value()
  {
    return "nesfr3_gazebo/shot";
  }

  static const char* value(const ::nesfr3_gazebo::shot&) { return value(); }
};


// service_traits::MD5Sum< ::nesfr3_gazebo::shotRequest> should match
// service_traits::MD5Sum< ::nesfr3_gazebo::shot >
template<>
struct MD5Sum< ::nesfr3_gazebo::shotRequest>
{
  static const char* value()
  {
    return MD5Sum< ::nesfr3_gazebo::shot >::value();
  }
  static const char* value(const ::nesfr3_gazebo::shotRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::nesfr3_gazebo::shotRequest> should match
// service_traits::DataType< ::nesfr3_gazebo::shot >
template<>
struct DataType< ::nesfr3_gazebo::shotRequest>
{
  static const char* value()
  {
    return DataType< ::nesfr3_gazebo::shot >::value();
  }
  static const char* value(const ::nesfr3_gazebo::shotRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::nesfr3_gazebo::shotResponse> should match
// service_traits::MD5Sum< ::nesfr3_gazebo::shot >
template<>
struct MD5Sum< ::nesfr3_gazebo::shotResponse>
{
  static const char* value()
  {
    return MD5Sum< ::nesfr3_gazebo::shot >::value();
  }
  static const char* value(const ::nesfr3_gazebo::shotResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::nesfr3_gazebo::shotResponse> should match
// service_traits::DataType< ::nesfr3_gazebo::shot >
template<>
struct DataType< ::nesfr3_gazebo::shotResponse>
{
  static const char* value()
  {
    return DataType< ::nesfr3_gazebo::shot >::value();
  }
  static const char* value(const ::nesfr3_gazebo::shotResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NESFR3_GAZEBO_MESSAGE_SHOT_H
